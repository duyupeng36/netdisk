#ifndef CMD_H
#define CMD_H

#include <stdio.h>

/**
 * @brief Read command from standard input
 * 
 * @param buf A buffer for storing commands.
 * @param size The size of the buffer.
 * @param prompt The prompt message.
 * @return int on success, return number of characters read. On error, return -1.
 */
int cmd_read(char * restrict buf, size_t size, const char * restrict prompt);

/**
 * @brief Parse command into arguments
 * 
 * @param cmd The command string, eg. "ls -l -a" 
 * @param argc The number of arguments.
 * @return char** A pointer to an array, which contains a pointer to each argument. For failed, return NULL.
 */
char ** cmd_parse(const char *cmd, int *argc);


/**
 * @brief check and execute command, which is generated by cmd_parse
 * 
 * @param fd The file descriptor of the socket.
 * @param args An array of arguments, which is generated by cmd_parse.
 * @param argc The number of arguments.
 * @return int On success, return 0. On error, return -1.
 */
int cmd_exec(int fd, char **args, int argc);

/**
 * @brief free the memory of arguments, which is generated by cmd_parse.
 * 
 * @param args An array of arguments, which is generated by cmd_parse.
 */
void cmd_free(char **args);

#endif // CMD_H
